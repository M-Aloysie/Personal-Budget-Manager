{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ExpenseForm(_ref){let{addExpense,editExpense,currentExpense}=_ref;const[title,setTitle]=useState('');const[amount,setAmount]=useState('');const[category,setCategory]=useState('');// Populate form when editing an expense\nuseEffect(()=>{if(currentExpense){setTitle(currentExpense.title);setAmount(currentExpense.amount);setCategory(currentExpense.category);}},[currentExpense]);const handleSubmit=e=>{e.preventDefault();const expense={id:currentExpense?currentExpense.id:Date.now(),title,amount:parseFloat(amount),category,date:new Date().toISOString().split('T')[0]};if(currentExpense){editExpense(expense);// Call editExpense if we're editing\n}else{addExpense(expense);// Call addExpense if it's a new expense\n}// Reset form\nsetTitle('');setAmount('');setCategory('');};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"h2\",{children:currentExpense?'Edit Expense':'Add New Expense'}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:title,placeholder:\"Title\",onChange:e=>setTitle(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:amount,placeholder:\"Amount\",onChange:e=>setAmount(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:category,placeholder:\"Category\",onChange:e=>setCategory(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:currentExpense?'Update Expense':'Add Expense'})]});}export default ExpenseForm;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","ExpenseForm","_ref","addExpense","editExpense","currentExpense","title","setTitle","amount","setAmount","category","setCategory","handleSubmit","e","preventDefault","expense","id","Date","now","parseFloat","date","toISOString","split","onSubmit","children","type","value","placeholder","onChange","target","required"],"sources":["D:/Personal-Budget-Manager/src/components/ExpenseForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction ExpenseForm({ addExpense, editExpense, currentExpense }) {\r\n  const [title, setTitle] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n  const [category, setCategory] = useState('');\r\n\r\n  // Populate form when editing an expense\r\n  useEffect(() => {\r\n    if (currentExpense) {\r\n      setTitle(currentExpense.title);\r\n      setAmount(currentExpense.amount);\r\n      setCategory(currentExpense.category);\r\n    }\r\n  }, [currentExpense]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const expense = {\r\n      id: currentExpense ? currentExpense.id : Date.now(),\r\n      title,\r\n      amount: parseFloat(amount),\r\n      category,\r\n      date: new Date().toISOString().split('T')[0],\r\n    };\r\n\r\n    if (currentExpense) {\r\n      editExpense(expense); // Call editExpense if we're editing\r\n    } else {\r\n      addExpense(expense); // Call addExpense if it's a new expense\r\n    }\r\n\r\n    // Reset form\r\n    setTitle('');\r\n    setAmount('');\r\n    setCategory('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>{currentExpense ? 'Edit Expense' : 'Add New Expense'}</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={title}\r\n        placeholder=\"Title\"\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        value={amount}\r\n        placeholder=\"Amount\"\r\n        onChange={(e) => setAmount(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        value={category}\r\n        placeholder=\"Category\"\r\n        onChange={(e) => setCategory(e.target.value)}\r\n        required\r\n      />\r\n      <button type=\"submit\">{currentExpense ? 'Update Expense' : 'Add Expense'}</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,QAAS,CAAAC,WAAWA,CAAAC,IAAA,CAA8C,IAA7C,CAAEC,UAAU,CAAEC,WAAW,CAAEC,cAAe,CAAC,CAAAH,IAAA,CAC9D,KAAM,CAACI,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACa,MAAM,CAAEC,SAAS,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACe,QAAQ,CAAEC,WAAW,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CAE5C;AACAC,SAAS,CAAC,IAAM,CACd,GAAIS,cAAc,CAAE,CAClBE,QAAQ,CAACF,cAAc,CAACC,KAAK,CAAC,CAC9BG,SAAS,CAACJ,cAAc,CAACG,MAAM,CAAC,CAChCG,WAAW,CAACN,cAAc,CAACK,QAAQ,CAAC,CACtC,CACF,CAAC,CAAE,CAACL,cAAc,CAAC,CAAC,CAEpB,KAAM,CAAAO,YAAY,CAAIC,CAAC,EAAK,CAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,KAAM,CAAAC,OAAO,CAAG,CACdC,EAAE,CAAEX,cAAc,CAAGA,cAAc,CAACW,EAAE,CAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CACnDZ,KAAK,CACLE,MAAM,CAAEW,UAAU,CAACX,MAAM,CAAC,CAC1BE,QAAQ,CACRU,IAAI,CAAE,GAAI,CAAAH,IAAI,CAAC,CAAC,CAACI,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAC7C,CAAC,CAED,GAAIjB,cAAc,CAAE,CAClBD,WAAW,CAACW,OAAO,CAAC,CAAE;AACxB,CAAC,IAAM,CACLZ,UAAU,CAACY,OAAO,CAAC,CAAE;AACvB,CAEA;AACAR,QAAQ,CAAC,EAAE,CAAC,CACZE,SAAS,CAAC,EAAE,CAAC,CACbE,WAAW,CAAC,EAAE,CAAC,CACjB,CAAC,CAED,mBACEX,KAAA,SAAMuB,QAAQ,CAAEX,YAAa,CAAAY,QAAA,eAC3B1B,IAAA,OAAA0B,QAAA,CAAKnB,cAAc,CAAG,cAAc,CAAG,iBAAiB,CAAK,CAAC,cAC9DP,IAAA,UACE2B,IAAI,CAAC,MAAM,CACXC,KAAK,CAAEpB,KAAM,CACbqB,WAAW,CAAC,OAAO,CACnBC,QAAQ,CAAGf,CAAC,EAAKN,QAAQ,CAACM,CAAC,CAACgB,MAAM,CAACH,KAAK,CAAE,CAC1CI,QAAQ,MACT,CAAC,cACFhC,IAAA,UACE2B,IAAI,CAAC,QAAQ,CACbC,KAAK,CAAElB,MAAO,CACdmB,WAAW,CAAC,QAAQ,CACpBC,QAAQ,CAAGf,CAAC,EAAKJ,SAAS,CAACI,CAAC,CAACgB,MAAM,CAACH,KAAK,CAAE,CAC3CI,QAAQ,MACT,CAAC,cACFhC,IAAA,UACE2B,IAAI,CAAC,MAAM,CACXC,KAAK,CAAEhB,QAAS,CAChBiB,WAAW,CAAC,UAAU,CACtBC,QAAQ,CAAGf,CAAC,EAAKF,WAAW,CAACE,CAAC,CAACgB,MAAM,CAACH,KAAK,CAAE,CAC7CI,QAAQ,MACT,CAAC,cACFhC,IAAA,WAAQ2B,IAAI,CAAC,QAAQ,CAAAD,QAAA,CAAEnB,cAAc,CAAG,gBAAgB,CAAG,aAAa,CAAS,CAAC,EAC9E,CAAC,CAEX,CAEA,cAAe,CAAAJ,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}